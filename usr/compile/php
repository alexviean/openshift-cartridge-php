#!/bin/bash
set -e

# Include common setup
source common

# Set build dir
BUILD_DIR="${CURRENT_DIR}/tmp"
PHP_VERSIONS=$(cat versions)

# Define function
function install_php() {
    local pkg=php-${PHP_VERSION}.tar.gz

    mkdir -p ${BUILD_DIR}
    pushd ${BUILD_DIR}

    # Get archive
    download_and_unpack ${pkg} http://php.net/get/${pkg}/from/this/mirror
    pushd php-${PHP_VERSION}

    echo "Configuring PHP."
    EXTENSION_DIR=${ROOT_DIR}/ext \
    ./configure \
        --prefix=${PHP_DIR} \
        --localstatedir=${ROOT_DIR} \
        --with-mcrypt=${LIBS_DIR} \
        --with-layout=PHP \
        --with-curl \
        --with-zlib \
        --with-mhash \
        --with-pgsql \
        --with-mysqli \
        --with-pdo-mysql \
        --with-pdo-pgsql \
        --with-openssl \
        --with-xmlrpc \
        --with-xsl \
        --with-bz2 \
        --with-gettext \
        --with-readline \
        --with-kerberos \
        --with-gd \
        --with-jpeg-dir \
        --with-png-dir \
        --with-png-dir \
        --with-xpm-dir \
        --with-freetype-dir \
        --without-pear \
        --disable-debug \
        --disable-fileinfo \
        --enable-gd-native-ttf \
        --enable-fpm \
        --enable-cli \
        --enable-inline-optimization \
        --enable-exif \
        --enable-wddx \
        --enable-zip \
        --enable-bcmath \
        --enable-calendar \
        --enable-ftp \
        --enable-mbstring \
        --enable-soap \
        --enable-sockets \
        --enable-shmop \
        --enable-dba \
        --enable-sysvsem \
        --enable-sysvshm \
        --enable-sysvmsg \
        --enable-intl \
        --enable-opcache

    echo "Compiling PHP."
    make install

    echo "Cleaning build directory."
    popd
    popd
    rm -rf ${BUILD_DIR}
}

# Compile all required versions
for version in ${PHP_VERSIONS}; do
    if [ ! -z "${version}" ]; then
        PHP_DIR="${ROOT_DIR}/php-${version}"
        PHP_VERSION="${version}"

        # Install php
        install_php

        # Remove unneeded files
        rm -f "${PHP_DIR}/bin/phar"
        rm -rf "${PHP_DIR}/etc"
        rm -rf "${PHP_DIR}/php"
        rm -rf "${PHP_DIR}/var"

        # Patch install for cartridge usage
        PHP_DIR_ESCAPED="${PHP_DIR//\//\\/}"
        LIBS_DIR_ESCAPED="${LIBS_DIR//\//\\/}"
        ROOT_DIR_ESCAPED="${ROOT_DIR//\//\\/}"

        pushd ${PHP_DIR}/bin
        for file in pecl php-config phpize; do
            if [ -f ${file} ]; then
                sed -i "s/${PHP_DIR_ESCAPED}/\${OPENSHIFT_PHP_VERSION_DIR}/g" ${file}
                sed -i "s/${LIBS_DIR_ESCAPED}/\${OPENSHIFT_PHP_LIBS_DIR}/g" ${file}
                sed -i "s/${ROOT_DIR_ESCAPED}/\${OPENSHIFT_PHP_DIR}/g" ${file}
            fi
        done
        popd

        pushd ${PHP_DIR}/include/php/main
        file=build-defs.h
        if [ -f ${file} ]; then
            sed -i "s/${PHP_DIR_ESCAPED}/\${OPENSHIFT_PHP_VERSION_DIR}/g" ${file}
            sed -i "s/${LIBS_DIR_ESCAPED}/\${OPENSHIFT_PHP_LIBS_DIR}/g" ${file}
            sed -i "s/${ROOT_DIR_ESCAPED}/\${OPENSHIFT_PHP_DIR}/g" ${file}
        fi
        popd

        # Compress
        pushd ${ROOT_DIR}
        cp -R ext php-${version}/
        tar -cvf "${OPENSHIFT_REPO_DIR}/public/php-${version}.tar" php-${version}
        popd

        # Clean up
        rm -rf ${PHP_DIR}
    fi
done

# Backup libs before changing
pushd ${ROOT_DIR}
tar -cvf "${OPENSHIFT_REPO_DIR}/public/libs.tar" shared
popd

# Patch libs for cartridge usage
pushd ${LIBS_DIR}/bin
LIBS_DIR_ESCAPED="${LIBS_DIR//\//\\/}"
ROOT_DIR_ESCAPED="${ROOT_DIR//\//\\/}"
for file in icu-config libmcrypt-config libtoolize yacc; do
    if [ -f ${file} ]; then
        sed -i "s/${LIBS_DIR_ESCAPED}/\${OPENSHIFT_PHP_LIBS_DIR}/g" ${file}
        sed -i "s/${ROOT_DIR_ESCAPED}/\${OPENSHIFT_PHP_DIR}/g" ${file}
    fi
done
popd

## Remove unneeded files
rm -rf "${LIBS_DIR}/man"
rm -rf "${LIBS_DIR}/share/man"

## Append and compress for download
pushd ${ROOT_DIR}
for version in ${PHP_VERSIONS}; do
    if [ -f "${OPENSHIFT_REPO_DIR}/public/php-${version}.tar" ]; then
        # Append libs
        tar -rvf "${OPENSHIFT_REPO_DIR}/public/php-${version}.tar" shared

        # Compress for download
        gzip --rsyncable "${OPENSHIFT_REPO_DIR}/public/php-${version}.tar"
    fi
done
popd

# Restore libs
pushd ${ROOT_DIR}
rm -rf shared/
tar -xf "${OPENSHIFT_REPO_DIR}/public/libs.tar" shared
rm "${OPENSHIFT_REPO_DIR}/public/libs.tar"
popd
